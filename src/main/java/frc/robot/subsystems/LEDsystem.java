// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;

import frc.robot.Constants;
import edu.wpi.first.wpilibj.AddressableLED;
import edu.wpi.first.wpilibj.AddressableLEDBuffer;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

public class LEDsystem extends SubsystemBase {
private AddressableLED strip1;
private AddressableLEDBuffer buffer;
private Constants.color currentcolor= Constants.color.BLACK;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */

    public LEDsystem(int port1) {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        strip1=new AddressableLED(port1);
        // strip2=new AddressableLED(port2);
        buffer= new AddressableLEDBuffer(Constants.LED_STRIP_LENGTH);//this length is the number of LEDs on each strip.
        strip1.setLength(buffer.getLength());
        // strip2.setLength(buffer.getLength());
        strip1.setData(buffer);
        // strip2.setData(buffer);
        //I'm not 100% what start actually does but the doc makes it seem needed.
        strip1.start();
        // strip2.start();
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }
    public void setColor(Constants.color color){
        if(color==currentcolor){//no need to set the LEDs if we're just trying to set them to what they are.
            return;
        }
        if(color==Constants.color.PURPLE){
            setLEDs(255,0,255);
        } else if(color==Constants.color.YELLOW){
            setLEDs(255,255,0);
        } else if(color==Constants.color.BLACK){
            setLEDs(0,0,0);
        } else if(color==Constants.color.GREEN){
            setLEDs(0,255,0);
        } else {
            System.err.println("ERROR: ATTEMPTED TO SET LED TO NONEXISTANT SHAPE.");
        }
        color=currentcolor;
        strip1.setData(buffer);
        //strip2.setData(buffer);
    }
    public void setLEDs(int R, int G, int B){//sets all the LEDs to the given RGB color
        for (var i = 0; i < buffer.getLength(); i++) {
            buffer.setRGB(i, R, G, B);
        }
    }
    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

